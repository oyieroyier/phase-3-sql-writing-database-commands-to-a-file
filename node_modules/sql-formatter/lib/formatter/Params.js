"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

/**
 * Handles placeholder replacement with given params.
 */
var Params = /*#__PURE__*/function () {
  function Params(params) {
    _classCallCheck(this, Params);

    _defineProperty(this, "params", void 0);

    _defineProperty(this, "index", void 0);

    this.params = params;
    this.index = 0;
  }
  /**
   * Returns param value that matches given placeholder with param key.
   */


  _createClass(Params, [{
    key: "get",
    value: function get(_ref) {
      var key = _ref.key,
          text = _ref.text;

      if (!this.params) {
        return text;
      }

      if (key) {
        return this.params[key];
      }

      return this.params[this.index++];
    }
    /**
     * Returns index of current positional parameter.
     */

  }, {
    key: "getPositionalParameterIndex",
    value: function getPositionalParameterIndex() {
      return this.index;
    }
    /**
     * Sets index of current positional parameter.
     */

  }, {
    key: "setPositionalParameterIndex",
    value: function setPositionalParameterIndex(i) {
      this.index = i;
    }
  }]);

  return Params;
}();

exports["default"] = Params;
module.exports = exports.default;
//# sourceMappingURL=Params.js.map