{"version":3,"file":"createParser.js","names":["createParser","tokenizer","paramTypesOverrides","lexer","LexerAdapter","chunk","disambiguateTokens","tokenize","createEofToken","length","parser","NearleyParser","Grammar","fromCompiled","grammar","parse","sql","paramTypes","feed","results","Error"],"sources":["../../src/parser/createParser.ts"],"sourcesContent":["import { Parser as NearleyParser, Grammar } from 'nearley';\n\nimport Tokenizer from 'src/lexer/Tokenizer';\nimport { disambiguateTokens } from 'src/lexer/disambiguateTokens';\nimport { ParamTypes } from 'src/lexer/TokenizerOptions';\nimport { StatementNode } from 'src/parser/ast';\nimport grammar from 'src/parser/grammar';\nimport LexerAdapter from 'src/parser/LexerAdapter';\nimport { createEofToken } from 'src/lexer/token';\n\nexport interface Parser {\n  parse(sql: string, paramTypesOverrides: ParamTypes): StatementNode[];\n}\n\n/**\n * Creates a parser object which wraps the setup of Nearley parser\n */\nexport function createParser(tokenizer: Tokenizer): Parser {\n  let paramTypesOverrides: ParamTypes = {};\n  const lexer = new LexerAdapter(chunk => [\n    ...disambiguateTokens(tokenizer.tokenize(chunk, paramTypesOverrides)),\n    createEofToken(chunk.length),\n  ]);\n  const parser = new NearleyParser(Grammar.fromCompiled(grammar), { lexer });\n\n  return {\n    parse: (sql: string, paramTypes: ParamTypes) => {\n      // share paramTypesOverrides with Tokenizer\n      paramTypesOverrides = paramTypes;\n\n      const { results } = parser.feed(sql);\n\n      if (results.length === 1) {\n        return results[0];\n      } else if (results.length === 0) {\n        // Ideally we would report a line number where the parser failed,\n        // but I haven't found a way to get this info from Nearley :(\n        throw new Error('Parse error: Invalid SQL');\n      } else {\n        throw new Error('Parse error: Ambiguous grammar');\n      }\n    },\n  };\n}\n"],"mappings":";;;;;;;AAAA;;AAGA;;AAGA;;AACA;;AACA;;;;;;;;;;;;;;;;AAMA;AACA;AACA;AACO,SAASA,YAAT,CAAsBC,SAAtB,EAAoD;EACzD,IAAIC,mBAA+B,GAAG,EAAtC;EACA,IAAMC,KAAK,GAAG,IAAIC,wBAAJ,CAAiB,UAAAC,KAAK;IAAA,oCAC/B,IAAAC,sCAAA,EAAmBL,SAAS,CAACM,QAAV,CAAmBF,KAAnB,EAA0BH,mBAA1B,CAAnB,CAD+B,IAElC,IAAAM,qBAAA,EAAeH,KAAK,CAACI,MAArB,CAFkC;EAAA,CAAtB,CAAd;EAIA,IAAMC,MAAM,GAAG,IAAIC,eAAJ,CAAkBC,gBAAA,CAAQC,YAAR,CAAqBC,mBAArB,CAAlB,EAAiD;IAAEX,KAAK,EAALA;EAAF,CAAjD,CAAf;EAEA,OAAO;IACLY,KAAK,EAAE,eAACC,GAAD,EAAcC,UAAd,EAAyC;MAC9C;MACAf,mBAAmB,GAAGe,UAAtB;;MAEA,mBAAoBP,MAAM,CAACQ,IAAP,CAAYF,GAAZ,CAApB;MAAA,IAAQG,OAAR,gBAAQA,OAAR;;MAEA,IAAIA,OAAO,CAACV,MAAR,KAAmB,CAAvB,EAA0B;QACxB,OAAOU,OAAO,CAAC,CAAD,CAAd;MACD,CAFD,MAEO,IAAIA,OAAO,CAACV,MAAR,KAAmB,CAAvB,EAA0B;QAC/B;QACA;QACA,MAAM,IAAIW,KAAJ,CAAU,0BAAV,CAAN;MACD,CAJM,MAIA;QACL,MAAM,IAAIA,KAAJ,CAAU,gCAAV,CAAN;MACD;IACF;EAhBI,CAAP;AAkBD"}